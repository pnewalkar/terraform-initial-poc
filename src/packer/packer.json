{
  "builders": [
    {
      "type": "azure-arm",
      "use_azure_cli_auth": true,
      "managed_image_resource_group_name": "uk-dev-xpressweigh-terraform-spike-2",
      "managed_image_name": "defaultTabletImage",
      "build_resource_group_name": "uk-dev-xpressweigh-terraform-spike-2",      
      "virtual_network_name": "uk-tea-xpw-vnet",
      "virtual_network_subnet_name": "uk-tea-xpw-subnet-fe",
      "virtual_network_resource_group_name": "uk-tea-it-xpressweigh",
      "os_type": "Windows",
      "image_publisher": "MicrosoftWindowsDesktop",
      "image_offer": "Windows-10",
      "image_sku": "19h2-pro-g2",
      "vm_size": "Standard_D2s_v3",
      "communicator": "winrm",
      "winrm_use_ssl": true,
      "winrm_insecure": true,
      "winrm_timeout": "10m",
      "winrm_username": "packer"
    },
    {
      "type": "virtualbox-iso",
      "communicator": "winrm",
      "disk_size": 61440,
      "floppy_files": [
        "./floppy/Autounattend.xml",
        "./floppy/set-wsus-registry.ps1",
        "./floppy/update-windows.ps1",
        "./floppy/configure-winrm.ps1"
      ],
      "guest_additions_mode": "upload",
      "guest_additions_path": "c:/Windows/Temp/windows.iso",
      "guest_os_type": "Windows10_64",
      "hard_drive_interface": "sata",
      "headless": true,
      "iso_checksum": "md5:{{user `iso_md5`}}",
      "iso_interface": "sata",
      "iso_url": "{{user `iso_path`}}",
      "shutdown_command": "shutdown /s /t 0 /f /d p:4:1 /c \"Packer Shutdown\"",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "2048"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "2"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--vram",
          "32"
        ]
      ],
      "winrm_insecure": true,
      "winrm_password": "vagrant",
      "winrm_timeout": "6h",
      "winrm_username": "vagrant"
    }
  ],
  "provisioners": [
    {
      "only": ["virtualbox-iso"],
      "type": "powershell",
      "scripts": [
        "scripts/install-guest-tools.ps1",
        "scripts/no-expiration.ps1"
      ]
    },   
    {
      "scripts": [
        "scripts/enable-rdp.ps1",
        "scripts/disable-hibernate.ps1",
        "scripts/disable-autologin.ps1",
        "scripts/enable-uac.ps1",
        "scripts/install-puppet.ps1"
      ],
      "type": "powershell"
    },
    {
      "type": "powershell",
      "scripts": [
        "scripts/install-puppet-modules.ps1"
      ]
    },
    {
      "type": "file",
      "source": "../../../XpressWeigh.Tablets/site-modules/",
      "destination": " C:/ProgramData/PuppetLabs/code/environments/production/modules/"
    },
    {
      "type": "file",
      "source": "../../../XpressWeigh.Tablets/modules/",
      "destination": " C:/ProgramData/PuppetLabs/code/environments/production/modules/"
    },
    {
      "type": "puppet-masterless",
      "manifest_file": "../../../XpressWeigh.Tablets/manifests/site.pp",
      "guest_os_type": "windows"
    },
    {
      "restart_check_command": "powershell -command \"\u0026 {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\"",
      "restart_command": "powershell \"\u0026 {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "type": "windows-restart"
    },
    {
      "only": ["azure-arm"],
      "type": "powershell",
      "inline": [
        " # NOTE: the following *3* lines are only needed if the you have installed the Guest Agent.",
        "  # while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "  # while ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running') { Start-Sleep -s 5 }",
        "  # while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit /mode:vm",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; Write-Output $imageState.ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Start-Sleep -s 10 } else { break } }"
      ]
    }
  ],
  "variables": {
    "iso_md5": "",
    "iso_path": "",
    "switch_name": "Default Switch"
  },
  "post-processors": [
    {
      "only": ["virtualbox-iso"],
      "type": "vagrant",
      "keep_input_artifact": false,
      "output": "{{.Provider}}_windows-10.box",
      "vagrantfile_template": "vagrantfile.template"
    }
  ]
}